-- 배달관리 프로그램 DB

-- 멤버 관리 테이블
CREATE TABLE MEMBER (
    MEMBER_NO NUMBER PRIMARY KEY,
    MEMBER_ID VARCHAR2(20) NOT NULL,
    MEMBER_PWD VARCHAR2(20) NOT NULL,
    MEMBER_NAME VARCHAR(30) NOT NULL,
    MEMBER_GENDER CHAR(1),
    MEMBER_ADRESS VARCHAR(200),
    ENROLL_DATE DATE DEFAULT SYSDATE,
    SECESSION_FL CHAR(1) DEFAULT 'N'
);

COMMENT ON COLUMN MEMBER.MEMBER_NO IS '회원 번호';
COMMENT ON COLUMN MEMBER.MEMBER_ID IS '회원 아이디';
COMMENT ON COLUMN MEMBER.MEMBER_PWD IS '비밀번호';
COMMENT ON COLUMN MEMBER.MEMBER_NAME IS '회원 이름';
COMMENT ON COLUMN MEMBER.MEMBER_GENDER IS '회원 성별(M/F)';
COMMENT ON COLUMN MEMBER.MEMBER_ADRESS IS '회원 주소';
COMMENT ON COLUMN MEMBER.ENROLL_DATE IS '가입일';
COMMENT ON COLUMN MEMBER.SECESSION_FL IS '탈퇴 여부(Y/N)';

ALTER TABLE MEMBER
ADD CHECK(MEMBER_GENDER IN ('M', 'F'));

ALTER TABLE MEMBER
ADD CHECK(SECESSION_FL IN ('Y', 'N'));

CREATE SEQUENCE SEQ_MEM_NO;
DROP SEQUENCE SEQ_MEM_NO;

ALTER TABLE MEMBER
RENAME COLUMN MEMBER_NAME TO MEMBER_NM;

COMMIT;

-- 컬럼 추가

ALTER TABLE MEMBER
ADD(PHONE VARCHAR2(20) NOT NULL);

ALTER TABLE MEMBER
ADD(MEMBER_NICKNM VARCHAR2(30) UNIQUE);

ALTER TABLE MEMBER
ADD(MEMBER_AGE NUMBER);


-- 코멘트 설정

COMMENT ON COLUMN MEMBER.PHONE IS '전화번호';
COMMENT ON COLUMN MEMBER.MEMBER_NICKNM IS '닉네임(별명)';
COMMENT ON COLUMN MEMBER.MEMBER_AGE IS '나이';


ALTER TABLE MEMBER
DROP CONSTRAINT SYS_C0010188;

ALTER TABLE MEMBER
MODIFY MEMBER_NICKNM DEFAULT '익명';


-- 값 추가

INSERT INTO MEMBER
VALUES(SEQ_MEM_NO.NEXTVAL, 'red01', 'pass01', '김레드', 'M', '서울시 강북구 OO로 OO길 1',
    DEFAULT, DEFAULT, '010-1111-2222', 'RED');

INSERT INTO MEMBER
VALUES(SEQ_MEM_NO.NEXTVAL, 'orange02', 'pass02', '오렌지', 'M', '서울시 강서구 OO로 OO길 2',
    DEFAULT, DEFAULT, '010-3333-4444', 'O_range');
    
INSERT INTO MEMBER
VALUES(SEQ_MEM_NO.NEXTVAL, 'yello03', 'pass03', '이노랑', 'F', '서울시 강남구 OO로 OO길 3',
    DEFAULT, DEFAULT, '010-5555-6666', '노랑통닭');
    
UPDATE MEMBER SET
MEMBER_AGE = 17
WHERE MEMBER_NO = 3;

COMMIT;

-----------------------------------------------------------------------------------

-- 식당 정보 테이블

CREATE TABLE RESTAURANT (
    RESTAURANT_NO NUMBER PRIMARY KEY,
    RESTAURANT_NM VARCHAR2(30) NOT NULL
);

COMMENT ON COLUMN RESTAURANT.RESTAURANT_NO IS '식당 번호';
COMMENT ON COLUMN RESTAURANT.RESTAURANT_NM IS '식당 이름';

INSERT INTO RESTAURANT
VALUES('1', '안녕치킨');

INSERT INTO RESTAURANT
VALUES('2', '매운짬뽕');

INSERT INTO RESTAURANT
VALUES('3', '동글초밥');

INSERT INTO RESTAURANT
VALUES('4', '울희분식');

ALTER TABLE RESTAURANT
ADD(CATEGORY VARCHAR2(20));

COMMENT ON COLUMN RESTAURANT.CATEGORY IS '식당 분류';

UPDATE RESTAURANT
SET CATEGORY = '치킨'
WHERE RESTAURANT_NO = 1;

UPDATE RESTAURANT
SET CATEGORY = '중식'
WHERE RESTAURANT_NO = 2;

UPDATE RESTAURANT
SET CATEGORY = '일식'
WHERE RESTAURANT_NO = 3;

UPDATE RESTAURANT
SET CATEGORY = '한식'
WHERE RESTAURANT_NO = 4;

COMMIT;


-----------------------------------------------------------------------------------

-- 식당 메뉴 테이블

CREATE TABLE CHICKEN (
    MENU_NO NUMBER PRIMARY KEY,
    MUNU_NM VARCHAR2(30) NOT NULL,
    PRICE NUMBER NOT NULL,
    RESTAURANT_NO NUMBER REFERENCES RESTAURANT
);

ALTER TABLE CHICKEN MODIFY RESTAURANT_NO DEFAULT '1';

COMMENT ON COLUMN CHICKEN.MENU_NO IS '메뉴 번호';
COMMENT ON COLUMN CHICKEN.MUNU_NM IS '메뉴 이름';
COMMENT ON COLUMN CHICKEN.PRICE IS '가격';
COMMENT ON COLUMN CHICKEN.RESTAURANT_NO IS '식당 번호';

ALTER TABLE CHICKEN RENAME COLUMN MUNU_NM TO MENU_NM;

INSERT INTO CHICKEN
VALUES(1, '후라이드 치킨', 17000, 1);

INSERT INTO CHICKEN
VALUES(2, '양념 치킨', 18000, 1);

INSERT INTO CHICKEN
VALUES(3, '순살 치킨', 20000, 1);

INSERT INTO CHICKEN
VALUES(4, '간장 치킨', 18000, 1);

INSERT INTO CHICKEN
VALUES(5, '반반 치킨', 18000, 1);

INSERT INTO CHICKEN
VALUES(6, '양념 추가', 2000, 1);

INSERT INTO CHICKEN
VALUES(7, '순살 추가', 2000, 1);

COMMIT;

CREATE TABLE CHINESE_RST (
    MENU_NO NUMBER PRIMARY KEY,
    MUNU_NM VARCHAR2(30) NOT NULL,
    PRICE NUMBER NOT NULL,
    RESTAURANT_NO NUMBER REFERENCES RESTAURANT
);

ALTER TABLE CHINESE_RST MODIFY RESTAURANT_NO DEFAULT '2';

COMMENT ON COLUMN CHINESE_RST.MENU_NO IS '메뉴 번호';
COMMENT ON COLUMN CHINESE_RST.MUNU_NM IS '메뉴 이름';
COMMENT ON COLUMN CHINESE_RST.PRICE IS '가격';
COMMENT ON COLUMN CHINESE_RST.RESTAURANT_NO IS '식당 번호';

ALTER TABLE CHINESE_RST RENAME COLUMN MUNU_NM TO MENU_NM;

INSERT INTO CHINESE_RST
VALUES(1, '짜장면', 6000, 2);

INSERT INTO CHINESE_RST
VALUES(2, '짬뽕', 8000, 2);

INSERT INTO CHINESE_RST
VALUES(3, '간짜장', 7000, 2);

INSERT INTO CHINESE_RST
VALUES(4, '쟁반짜장', 18000, 2);

INSERT INTO CHINESE_RST
VALUES(5, '탕수육(小)', 15000, 2);

INSERT INTO CHINESE_RST
VALUES(6, '탕수육(大)', 25000, 2);

COMMIT;


CREATE TABLE SUSHI_RST (
    MENU_NO NUMBER PRIMARY KEY,
    MUNU_NM VARCHAR2(30) NOT NULL,
    PRICE NUMBER NOT NULL,
    RESTAURANT_NO NUMBER REFERENCES RESTAURANT
);

ALTER TABLE SUSHI_RST MODIFY RESTAURANT_NO DEFAULT '3';

COMMENT ON COLUMN SUSHI_RST.MENU_NO IS '메뉴 번호';
COMMENT ON COLUMN SUSHI_RST.MUNU_NM IS '메뉴 이름';
COMMENT ON COLUMN SUSHI_RST.PRICE IS '가격';
COMMENT ON COLUMN SUSHI_RST.RESTAURANT_NO IS '식당 번호';

ALTER TABLE SUSHI_RST RENAME COLUMN MUNU_NM TO MENU_NM;

INSERT INTO SUSHI_RST
VALUES(1, '초밥 정식', 12000, 3);

INSERT INTO SUSHI_RST
VALUES(2, '우동 정식', 10000, 3);

INSERT INTO SUSHI_RST
VALUES(3, '냉모밀 정식', 11000, 3);

INSERT INTO SUSHI_RST
VALUES(4, '새우 초밥', 10000, 3);

INSERT INTO SUSHI_RST
VALUES(5, '광어 초밥', 15000, 3);

INSERT INTO SUSHI_RST
VALUES(6, '연어 초밥', 16000, 3);

COMMIT;


CREATE TABLE KOREAN_RST (
    MENU_NO NUMBER PRIMARY KEY,
    MUNU_NM VARCHAR2(30) NOT NULL,
    PRICE NUMBER NOT NULL,
    RESTAURANT_NO NUMBER REFERENCES RESTAURANT
);

ALTER TABLE KOREAN_RST MODIFY RESTAURANT_NO DEFAULT '4';

COMMENT ON COLUMN KOREAN_RST.MENU_NO IS '메뉴 번호';
COMMENT ON COLUMN KOREAN_RST.MUNU_NM IS '메뉴 이름';
COMMENT ON COLUMN KOREAN_RST.PRICE IS '가격';
COMMENT ON COLUMN KOREAN_RST.RESTAURANT_NO IS '식당 번호';

ALTER TABLE KOREAN_RST RENAME COLUMN MUNU_NM TO MENU_NM;

INSERT INTO KOREAN_RST
VALUES(1, '김밥', 3000, 4);

INSERT INTO KOREAN_RST
VALUES(2, '치즈 김밥', 3500, 4);

INSERT INTO KOREAN_RST
VALUES(3, '김치볶음밥', 6000, 4);

INSERT INTO KOREAN_RST
VALUES(4, '된장찌개', 5000, 4);

INSERT INTO KOREAN_RST
VALUES(5, '순두부찌개', 5500, 4);

INSERT INTO KOREAN_RST
VALUES(6, '떡볶이', 4000, 4);

INSERT INTO KOREAN_RST
VALUES(7, '라볶이', 6000, 4);

INSERT INTO KOREAN_RST
VALUES(8, '라면', 3000, 4);

ROLLBACK;
COMMIT;
-----------------------------------------------------------------------------------

-- 아이디 중복 검사
SELECT COUNT(*)
FROM MEMBER
WHERE MEMBER_ID = 'red01'
AND SECESSION_FL = 'N';

-- 닉네임 중복 검사

SELECT COUNT(*)
FROM MEMBER
WHERE MEMBER_NICKNM = 'RED'
AND SECESSION_FL = 'N';

-- 회원 가입

-- INSERT INTO MEMBER
-- VALUES(SEQ_MEM_NO.NEXTVAL, 'yello03', 'pass03', '이노랑', 'F', '서울시 강남구 OO로 OO길 3',
--        DEFAULT, DEFAULT, '010-5555-6666', '노랑통닭', 17);

INSERT INTO MEMBER
VALUES(SEQ_MEM_NO.NEXTVAL, ?, ?, ?, ?, ?, DEFAULT, DEFAULT, ?, ?, ?);

-----------------------------------------------------------------------------------
-- 주문 테이블

CREATE TABLE ORDER_OF_FOOD (
    ORDER_NO NUMBER PRIMARY KEY,
    MEMBER_NO NUMBER REFERENCES MEMBER,
    RESTAURANT_NO NUMBER REFERENCES RESTAURANT,
    MENU_NO NUMBER NOT NULL,
    PRICE NUMBER,
    NUMBER_OF_MENU NUMBER DEFAULT 1,
    ORDER_TIME DATE DEFAULT SYSDATE
);

COMMENT ON COLUMN ORDER_OF_FOOD.ORDER_NO IS '주문 번호';

COMMENT ON COLUMN ORDER_OF_FOOD.MEMBER_NO IS '주문자 번호';
COMMENT ON COLUMN ORDER_OF_FOOD.RESTAURANT_NO IS '식당 번호';
COMMENT ON COLUMN ORDER_OF_FOOD.MENU_NO IS '메뉴 번호';
COMMENT ON COLUMN ORDER_OF_FOOD.PRICE IS '메뉴 가격';
COMMENT ON COLUMN ORDER_OF_FOOD.NUMBER_OF_MENU IS '주문 개수';
COMMENT ON COLUMN ORDER_OF_FOOD.ORDER_TIME IS '주문 시간';

ALTER TABLE ORDER_OF_FOOD
DROP COLUMN PRICE;

ALTER TABLE ORDER_OF_FOOD
ADD(COMPLETE_YN CHAR(1) DEFAULT 'N');

ALTER TABLE ORDER_OF_FOOD
ADD(REVIEW_YN CHAR(1) DEFAULT 'N');

COMMENT ON COLUMN ORDER_OF_FOOD.COMPLETE_YN IS '배달 완료(Y/N)';
COMMENT ON COLUMN ORDER_OF_FOOD.REVIEW_YN IS '리뷰 완료(Y/N)';

UPDATE ORDER_OF_FOOD
SET COMPLETE_YN = 'N';

UPDATE ORDER_OF_FOOD
SET REVIEW_YN = 'N';

COMMIT;

-----------------------------------------------------------------------------------

SELECT * FROM CHICKEN;

SELECT MENU_NO, MENU_NM, TO_CHAR(PRICE, 'L999,999')
FROM CHICKEN;

-- 음식 주문
INSERT INTO ORDER_OF_FOOD
VALUES(SEQ_ORDER_NO.NEXTVAL, 1, 4, 1, 1, DEFAULT, DEFAULT);
-- ORDER_NO, MEMBER_NO, RESTAURANT_NO, MENU_NO, NUMBER_OF_MENU, ORDER_TIME

CREATE SEQUENCE SEQ_ORDER_NO;
ALTER SEQUENCE SEQ_ORDER_NO NOCACHE;

COMMIT;

-- 1.
SELECT ORDER_NO, MENU_NM, NUMBER_OF_MENU, PRICE, PRICE*NUMBER_OF_MENU PN, ORDER_TIME, PRICE
FROM ORDER_OF_FOOD O
JOIN CHICKEN C USING(MENU_NO)
WHERE O.RESTAURANT_NO = 1
AND MEMBER_NO = ?
AND COMPLETE_YN = 'N';

-- 2.
SELECT ORDER_NO, MENU_NM, NUMBER_OF_MENU, PRICE, PRICE*NUMBER_OF_MENU PN, ORDER_TIME
FROM ORDER_OF_FOOD O
JOIN CHINESE_RST C USING(MENU_NO)
WHERE O.RESTAURANT_NO = 2
AND MEMBER_NO = ?
AND COMPLETE_YN = 'N';

-- 3.
SELECT ORDER_NO, MENU_NM, NUMBER_OF_MENU, PRICE, PRICE*NUMBER_OF_MENU PN, ORDER_TIME
FROM ORDER_OF_FOOD O
JOIN SUSHI_RST S USING(MENU_NO)
WHERE O.RESTAURANT_NO = 3
AND MEMBER_NO = ?
AND COMPLETE_YN = 'N';

-- 4.
SELECT ORDER_NO, MENU_NM, NUMBER_OF_MENU, TO_CHAR(PRICE, 'L99,999') TCP, TO_CHAR(PRICE*NUMBER_OF_MENU, 'L99,999') PN, ORDER_TIME, PRICE
FROM ORDER_OF_FOOD O
JOIN KOREAN_RST C USING(MENU_NO)
WHERE O.RESTAURANT_NO = 4
AND MEMBER_NO = 1
AND COMPLETE_YN = 'N';

DELETE FROM ORDER_OF_FOOD
WHERE MEMBER_NO = 1
AND ORDER_NO = 6;

COMMIT;
ROLLBACK;

UPDATE ORDER_OF_FOOD
SET COMPLETE_YN = 'Y'
WHERE MEMBER_NO = 1
AND ORDER_NO = 1;


SELECT RESTAURANT_NM, ORDER_NO, MENU_NM, NUMBER_OF_MENU, TO_CHAR(ORDER_TIME, 'MM/DD HH:MI') TOCHARTIME, REVIEW_YN
FROM ORDER_OF_FOOD O
JOIN RESTAURANT R ON(O.RESTAURANT_NO = R.RESTAURANT_NO)
JOIN CHICKEN USING(MENU_NO)
WHERE O.RESTAURANT_NO = 1
AND MEMBER_NO = 1
AND COMPLETE_YN = 'Y';